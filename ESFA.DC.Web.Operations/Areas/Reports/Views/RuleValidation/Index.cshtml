@using ESFA.DC.Web.Operations.Constants
@model ESFA.DC.Web.Operations.Areas.Reports.Models.RuleSearchViewModel
@{
    ViewData["Title"] = "Index";
    var years = (IEnumerable<SelectListItem>)ViewData["years"];
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-xl">Search for a validation rule</h1>
    </div>
</div>

<form asp-controller="Rulevalidation" asp-action="Index" method="post" id="rulesearch">
    <div class="govuk-form-group">
        <label class="govuk-label" for="year">
            Year
        </label>
        <select class="govuk-select govuk-input--width-20" id="year" name="year" asp-for="@Model.Year" onchange="this.form.submit();" class="form-control" asp-items=@years></select>
    </div>

   <div id="tt-overlay">
        <div id="tt-overlay" class="autocomplete-wrapper"></div>
    </div>
</form>

<script src="~/assets/js/signalr/dist/browser/signalr.js"></script>
<script src="~/assets/minified/accessible-autocomplete.min.js"></script>
<script type="module">    
        var element = document.querySelector('#tt-overlay');
        var id = 'autocomplete-overlay';

        function searchRulesOnConfirm(result) {
             var e = document.getElementById("year");
             var year = e.options[e.selectedIndex].value;
            window.location.href = '@Url.Action("ValidationRulesReport", "Rulevalidation")?year=' + year + '&rule=' + result;
        }

        accessibleAutocomplete({
            element: element,
            id: id,
            displayMenu: 'overlay',
            confirmOnBlur: false,
            showNoOptionsFound: false,
             onConfirm: searchRulesOnConfirm,
            source: @Json.Serialize(@Model.Rules),
            placeholder: 'e.g Rule_01'
         });
</script>