@using ESFA.DC.Web.Operations.Constants
@model ESFA.DC.Web.Operations.Areas.Reports.Models.ReportsViewModel

@{
    ViewData["Title"] = "Index";
    ViewData[ViewDataConstants.BackLink] = "/Home";
}

<br />
<form method="post">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <h3>Period:</h3>
            <select id="collectionYears" asp-for="CollectionYear" class="govuk-select govuk-input--width-10 form-control" asp-items="Model.Years" autopostback="true">
            </select>
            <select id="collectionPeriod" asp-for="CollectionPeriod" class="govuk-select govuk-input--width-10 form-control" asp-items="@Model.Periods">
            </select>
        </div>
    </div>

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <h3>Create new report for:</h3>
            <select id="reportSelection" asp-for="ReportType" asp-items="@Model.Reports" class="govuk-select govuk-input--width-20 form-control"></select>

            <button class="govuk-button" data-module="govuk-button" id="createReport">Create report</button>
        </div>
    </div>
</form>

<div id="ruleValidationDetailReportSection">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <span id="spinner" class="loading-spinner" style="display: block;position: absolute;left: auto;right: auto;"><img src="~/assets/images/loading-spinner.gif" alt="loading-icon"></span>
            <h3>Search for a validation rule:</h3>
        </div>
        <div class="govuk-grid-row govuk-grid-column-two-thirds">
            <div class="govuk-grid-column-two-thirds">
                <div id="tt-overlay">
                    <div id="tt-overlay" class="autocomplete-wrapper"></div>
                </div>
            </div>
            <div class="govuk-grid-column-one-third">
                <button data-prevent-double-click="true" class="govuk-button" type="submit" data-module="govuk-button" id="generateValidationReport">Generate Report</button>
            </div>
        </div>
    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h2 class="govuk-heading-m">Internal Reports</h2>
        <span id="reportsLoadingSpinner" class="loading-spinner" style="display: block;position: absolute;left: auto;right: auto;"><img src="~/assets/images/loading-spinner.gif" alt="loading-icon"></span>
        <table class="govuk-table" id="internalReportsTable">
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th class="govuk-table__header" scope="col">Report name</th>
                    <th class="govuk-table__header" scope="col">Download</th>
                </tr>
            </thead>
            <tbody id="internalReportsTableBody" class="govuk-table__body">
            </tbody>
        </table>
    </div>
</div>

@if (!string.IsNullOrEmpty(@ViewBag.Error))
{
    <div>
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <h4 class="govuk-error-message">The following error occured during processing: <br /><br />@ViewBag.Error</h4>
            </div>
        </div>
    </div>
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-one-third">&nbsp;</div>
    <div class="govuk-grid-column-two-thirds">
        <label id="state"></label>
    </div>
</div>

@section PageScripts
{
    <script src="~/lib/signalr/dist/browser/signalr.js" asp-append-version="true"></script>
    <script src="~/assets/minified/accessible-autocomplete.min.js"></script>
    <script type="module">
        import Client from '/assets/js/reports/client.js';
        import Hub from '/assets/js/hubs/hub.js';
        import ReportsController from '/assets/js/reports/reportsController.js';

        (function () {
            const controller = new ReportsController();
            const hub = new Hub('reportsHub', controller.displayConnectionState);
            hub.startHub(() => controller.getReports());
            window.reportClient = new Client(hub.getConnection());

            var validationReportGenerationUrl = '@Url.Action("ValidationRulesReport", "RuleValidation")';
            var reportsUrl = '@Url.Action("Index", "Reports")';
            var reportGenerationUrl = '@Url.Action("RunReport", "Reports")';
            var reportsDownloadUrl = '@Url.Action("GetReportFile", "Reports")';
            controller.init(validationReportGenerationUrl, reportGenerationUrl, reportsUrl, reportsDownloadUrl);
        })();
    </script>
}