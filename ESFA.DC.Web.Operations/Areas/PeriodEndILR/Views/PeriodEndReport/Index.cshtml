@model ESFA.DC.Web.Operations.Areas.PeriodEndILR.Models.PeriodEndReportViewModel

@{
    ViewData["Title"] = "Index";
}

<div class="govuk-breadcrumbs">
    <ol class="govuk-breadcrumbs__list">
        <li class="govuk-breadcrumbs__list-item">
            <a class="govuk-breadcrumbs__link" href="/">Home</a>
        </li>
        <li class="govuk-breadcrumbs__list-item">
            <a class="govuk-breadcrumbs__link" href="/periodend/periodEnd">Period end</a>
        </li>
        <li class="govuk-breadcrumbs__list-item">
            <a class="govuk-breadcrumbs__link" href="/periodendilr/periodEndPreparation">ILR</a>
        </li>
        <li class="govuk-breadcrumbs__list-item" aria-current="page">Period end reports</li>
    </ol>
</div>


<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-xl" style="margin-bottom: 10px;">Period end reports</h1>
        <br />
        <h2 class="govuk-heading-l">Period R@(Model.Period.ToString().PadLeft(2, '0')) of Year @Model.Year</h2>
    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h2 class="govuk-heading-m">Collection Stats</h2>
        <table class="govuk-table">
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th class="govuk-table__header" scope="col">Collection</th>
                    <th class="govuk-table__header" scope="col">Successful</th>
                    <th class="govuk-table__header" scope="col">Failed</th>
                    <th class="govuk-table__header" scope="col">Total</th>
                    <th class="govuk-table__header" scope="col">Successful %</th>
                </tr>
            </thead>
            <tbody class="govuk-table__body">
                @if (Model?.CollectionStats != null && Model.CollectionStats.Any())
                {
                    foreach (var collectionStat in Model.CollectionStats)
                    {
                        <tr class="govuk-table__row">
                            <td class="govuk-table__cell">@collectionStat.CollectionName</td>
                            <td class="govuk-table__cell">@collectionStat.CountOfComplete</td>
                            <td class="govuk-table__cell">@collectionStat.CountOfFail</td>
                            <td class="govuk-table__cell">@collectionStat.Total</td>
                            <td class="govuk-table__cell">@collectionStat.Percent</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<br />
<br />

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h2 class="govuk-heading-m">Summarisation Comparison</h2>
        <table class="govuk-table">
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th class="govuk-table__header" scope="col"></th>
                    <th class="govuk-table__header" scope="col">Last</th>
                    <th class="govuk-table__header" scope="col">Current</th>
                    <th class="govuk-table__header" scope="col">Difference</th>
                </tr>
            </thead>
            <tbody class="govuk-table__body">
                @if (Model?.SummarisationTotals != null && Model.SummarisationTotals.Any())
                {
                    foreach (var collectionType in Model.SummarisationTotals.Select(x => x.CollectionType).Distinct())
                    {
                        var orderedSummarisationTotals = Model.SummarisationTotals.Where(y => y.CollectionType.Equals(collectionType, StringComparison.OrdinalIgnoreCase)).OrderBy(c => c.CollectionReturnId).ToList();

                        var previous = orderedSummarisationTotals.FirstOrDefault();

                        var current = orderedSummarisationTotals.LastOrDefault();

                        var difference = current.TotalActualValue - previous.TotalActualValue;

                        <tr class="govuk-table__row">
                            <td class="govuk-table__cell">@collectionType</td>

                            <td class="govuk-table__cell">
                                @if (previous.CollectionReturnCode != current.CollectionReturnCode)
                                {
                                    <table>
                                        <tr>
                                            <td>@previous.CollectionReturnCode</td>
                                        </tr>
                                        <tr>
                                            <td>@String.Format("{0:#,###.##}", previous.TotalActualValue)</td>
                                        </tr>
                                    </table>
                                }
                            </td>
                            <td class="govuk-table__cell">
                                <table>
                                    <tr>
                                        <td>@current.CollectionReturnCode</td>
                                    </tr>
                                    <tr>
                                        <td>@String.Format("{0:#,###.##}", current.TotalActualValue)</td>
                                    </tr>
                                </table>
                            </td>
                            <td class="govuk-table__cell">
                                <table>
                                    <tr>
                                        <td>&nbsp;</td>
                                    </tr>
                                    <tr>
                                        <td>@String.Format("{0:#,###.##}", current.TotalActualValue - previous.TotalActualValue)</td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<br />
<br />

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h2 class="govuk-heading-m">Internal Reports</h2>
        <table class="govuk-table">
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th class="govuk-table__header" scope="col">Report name</th>
                    <th class="govuk-table__header" scope="col">Download</th>
                </tr>
            </thead>
            <tbody class="govuk-table__body">
                @if (Model?.ReportDetails != null && Model.ReportDetails.Any())
                {
                    foreach (var reportDetail in Model.ReportDetails.Where(rd => !string.IsNullOrEmpty(rd.Url)))
                    {
                        var fileDisplayName = reportDetail.Url.Substring(reportDetail.Url.LastIndexOf("/", StringComparison.Ordinal) + 1);
                        <tr class="govuk-table__row">
                            <td class="govuk-table__cell">@reportDetail.DisplayName</td>
                            <td class="govuk-table__cell">
                                @Html.ActionLink(fileDisplayName, "GetReportFile", new { collectionYear = Model.Year, fileName = reportDetail.Url })
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<br />
<br />

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h2 class="govuk-heading-m">Sample Reports</h2>

        <table class="govuk-table">
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th class="govuk-table__header" scope="col">Report name</th>
                    <th class="govuk-table__header" scope="col">Download</th>
                </tr>
            </thead>
            <tbody class="govuk-table__body">
                @if (Model?.SampleReports != null && Model.SampleReports.Any())
                {
                    foreach (var reportDetail in Model.SampleReports)
                    {
                        var fileDisplayName = reportDetail.Url.Substring(reportDetail.Url.LastIndexOf("/", StringComparison.Ordinal) + 1);
                        <tr class="govuk-table__row">
                            <td class="govuk-table__cell">@reportDetail.DisplayName</td>
                            <td class="govuk-table__cell">
                                @Html.ActionLink(fileDisplayName, "GetReportFile", new { collectionYear = Model.Year, period = Model.Period, fileName = reportDetail.Url })
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<br />
<br />

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h2 class="govuk-heading-m">LLV Sample Reports</h2>

        <table class="govuk-table">
            <thead class="govuk-table__head">
            <tr class="govuk-table__row">
                <th class="govuk-table__header" scope="col">Report name</th>
                <th class="govuk-table__header" scope="col">Download</th>
            </tr>
            </thead>
            <tbody class="govuk-table__body">
            @if (Model?.LLVSampleReports != null && Model.LLVSampleReports.Any())
            {
                foreach (var reportDetail in Model.LLVSampleReports)
                {
                    var fileDisplayName = reportDetail.Url.Substring(reportDetail.Url.LastIndexOf("/", StringComparison.Ordinal) + 1);
                    <tr class="govuk-table__row">
                        <td class="govuk-table__cell">@reportDetail.DisplayName</td>
                        <td class="govuk-table__cell">
                            @Html.ActionLink(fileDisplayName, "GetLLVReportFile", new { collectionYear = Model.Year, period = Model.Period, fileName = reportDetail.Url })
                        </td>
                    </tr>
                }
            }
            </tbody>
        </table>
    </div>
</div>

<br />
<br />

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h2 class="govuk-heading-m">MCA Reports</h2>

        <table class="govuk-table">
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th class="govuk-table__header" scope="col">Report name</th>
                    <th class="govuk-table__header" scope="col">Download</th>
                </tr>
            </thead>
            <tbody class="govuk-table__body">
                @if (Model?.McaReports != null && Model.McaReports.Any())
                {
                    foreach (var reportDetail in Model.McaReports)
                    {
                        var fileDisplayName = string.IsNullOrEmpty(reportDetail.Url) ? string.Empty : reportDetail.Url.Substring(reportDetail.Url.LastIndexOf("/", StringComparison.Ordinal) + 1);
                        <tr class="govuk-table__row">
                            <td class="govuk-table__cell">@reportDetail.DisplayName</td>
                            <td class="govuk-table__cell">
                                @Html.ActionLink(fileDisplayName, "GetReportFile", new { collectionYear = Model.Year, period = Model.Period, fileName = reportDetail.Url })
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>