@using ESFA.DC.Web.Operations.Constants
@model ESFA.DC.Web.Operations.Areas.PeriodEndILR.Models.ValidityPeriodViewModel
@{
    ViewData["Title"] = "Index";
}

<div class="govuk-breadcrumbs">
    <ol class="govuk-breadcrumbs__list">
        <li class="govuk-breadcrumbs__list-item">
            <a class="govuk-breadcrumbs__link" href="/">Home</a>
        </li>
        <li class="govuk-breadcrumbs__list-item">
            <a class="govuk-breadcrumbs__link" href="/periodend/periodEnd">Period end</a>
        </li>
        <li class="govuk-breadcrumbs__list-item">
            <a class="govuk-breadcrumbs__link" href="/periodendilr/periodEndPreparation">ILR</a>
        </li>
        <li class="govuk-breadcrumbs__list-item" aria-current="page">Period end validity periods</li>
    </ol>
</div>

@if (!Model.PeriodEndInProgress)
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <h1 class="govuk-heading-xl heading-bottom-margin">Validity Periods</h1>
            <br />
            <br />
            <div id="typeFilter" class="govuk-checkboxes">
                <div id="minusMargin" class="govuk-form-group margin-right">
                    <label class="govuk-label">Collection year</label>
                    <select class="govuk-select" id="collectionYear" name="collectionYear" onchange="window.change();">
                        @foreach (var year in Model.AllYears)
                        {
                            <option value="@year" @if (Model.Year == year) { @: selected
                                    }>
                                @year
                            </option>
                        }
                    </select>
                </div>

                <div id="minusMargin" class="govuk-form-group margin-right">
                    <label class="govuk-label">Period number</label>
                    <select class="govuk-select" id="periodNumber" name="periodNumber" onchange="window.change();">
                        @for (var i = 1; i <= 14; i++)
                        {
                            <option value="@i"
                                    @if (Model.Period == i) { @: selected
                                    }>
                                @i
                            </option>
                        }
                    </select>
                </div>
            </div>
        </div>
    </div>


    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <table class="govuk-table" id="tblData">
                <thead class="govuk-table__head">
                    <tr class="govuk-table__row">
                        <th class="govuk-table__header" scope="col">Collection name</th>
                        <th class="govuk-table__header govuk-!-width-one-quarter" scope="col">Enabled</th>
                    </tr>
                </thead>
                <tbody class="govuk-table__body" id="dataContent"></tbody>
            </table>
        </div>
    </div>

    <a href="#" class="govuk-button" onclick="saveList();return false;" id="aSaveList">Save</a>
}
else
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <h2 class="red-font">
                Not available when Period End in progress
            </h2>
        </div>
    </div>
}

<br />

<div class="govuk-grid-row">
    <div class="govuk-grid-column-one-third">&nbsp;</div>
    <div class="govuk-grid-column-two-thirds">
        <label id="lastSync"></label>

        <label id="state"></label>
    </div>
</div>

@if (!Model.PeriodEndInProgress)
{
    <script src="~/lib/signalr/dist/browser/signalr.js" asp-append-version="true"></script>

    <script type="module">
        import ValidityPeriodController from "/assets/js/periodEnd/validityPeriodController.js";
        import Hub from '/assets/js/hubs/hub.js';

        (function () {
            const validityPeriodController = new ValidityPeriodController();
            const hub = new Hub('validityPeriodHub', validityPeriodController.displayConnectionState);
            validityPeriodController.registerHandlers(hub);

            window.change = function () {
                var connection = hub.getConnection();
                var periodNumber = document.getElementById('periodNumber');
                var collectionYear = document.getElementById('collectionYear');
                validityPeriodController.getData(connection, "GetValidityPeriodList", collectionYear.value, periodNumber.value);
            };

            hub.startHub(window.change);

            window.saveList = function () {
                var connection = hub.getConnection();
                var periodNumber = document.getElementById('periodNumber');
                var collectionYear = document.getElementById('collectionYear');
                validityPeriodController.saveList(connection, "UpdateValidityPeriod", collectionYear.value, periodNumber.value);
            };

            window.checkedChanged = function (idx, checkBox) {
                validityPeriodController._data[idx].enabled = checkBox.checked;
            };
        })();

    </script>
}