@using ESFA.DC.Web.Operations.Constants
@model ESFA.DC.Web.Operations.Areas.Provider.Models.ProviderViewModel

@{
    ViewData["Title"] = "Add New Provider";
    ViewData[ViewDataConstants.BackLink] = "/";
}

<div class="app-masthead">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <span class="govuk-heading-s govuk-!-font-size-27 white-text">Search for a provider</span>
            <form class="govuk-form-group" action="provider-record">
                <div id="tt-overlay" class="autocomplete-wrapper"></div>
            </form>
        </div>
        <div class="govuk-grid-column-one-third">
        </div>
    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-x1">Provider's Details</h1>
    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        @using (Html.BeginForm("AddSingleProvider", "AddNew"))
        {
            <table class="govuk-table" id="providerTable">
                <tbody class="govuk-table__body" id="providerDetails">
                    <tr class="govuk-table__row">
                        <td class="govuk-table__cell govuk-!-font-weight-bold">Name</td>
                        <td class="govuk-table__cell" id="providerNameDisplay">@Model.ProviderName</td>
                    </tr>
                    <tr class="govuk-table__row">
                        <td class="govuk-table__cell govuk-!-font-weight-bold">UKPRN</td>
                        <td class="govuk-table__cell" id="ukprnDisplay">@Model.Ukprn</td>
                    </tr>
                    <tr class="govuk-table__row">
                        <td class="govuk-table__cell govuk-!-font-weight-bold">UPIN</td>
                        <td class="govuk-table__cell" id="upinDisplay">@Model.Upin</td>
                    </tr>
                </tbody>
            </table>
            <div class="govuk-form-group">
                <div class="govuk-checkboxes">
                    <div class="govuk-checkboxes__item">
                        <input asp-for="IsMca" class="govuk-checkboxes__input" id="isMca" , name="isMca" type="checkbox" />
                        <label class="govuk-label govuk-checkboxes__label" for="isMca">
                            MCA
                        </label>
                    </div>
                </div>
            </div>
            <br />
            <br />
            <input name="ukprn" type="hidden" id="hiddenUkprn" />
            <input name="providername" type="hidden" id="hiddenProviderName" />
            <input name="upin" type="hidden" id="hiddenUpin" />
            <button type="submit" id="submitButton" class="govuk-button" disabled>Save and continue</button>
            <br />
            <p>
                <div class="govuk-link"><a asp-controller="Home" asp-action="Index">Cancel</a></div>
            </p>
        }
    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-one-third">&nbsp;</div>
    <div class="govuk-grid-column-two-thirds">
        <label id="state"></label>
    </div>
</div>

@section PageScripts
{
    <script src="~/assets/js/signalr/dist/browser/signalr.js"></script>
    <script src="~/assets/minified/accessible-autocomplete.min.js"></script>
    <script src="~/assets/minified/aspnet-validation.min.js"></script>

    <script type="module">
        import Client from '/assets/js/providerSearch/client.js';
        import Hub from '/assets/js/hubs/providerSearchHub.js';

        const hub = new Hub();
        hub.startHub();

        window.searchClient = new Client(hub.getConnection());

        var providerName = document.getElementById('providerNameDisplay');
        if (providerName !== "undefined" && providerName.innerHTML !== "") {
            var submitButton = document.getElementById('submitButton');
            submitButton.disabled = false;

            var providerNameDisplay = document.getElementById('providerNameDisplay');
            var providerName = document.getElementById('hiddenProviderName');
            providerName.value = providerNameDisplay.innerHTML;

            var ukPrnDisplay = document.getElementById('ukprnDisplay');
            var ukprn = document.getElementById('hiddenUkprn');
            ukprn.value = ukPrnDisplay.innerHTML;

            var upinDisplay = document.getElementById('upinDisplay');
            var upin = document.getElementById('hiddenUpin');
            upin.value = upinDisplay.innerHTML;
        }

        function populateProviderValues(result) {
            if (typeof result !== "undefined") {
                var providerNameDisplay = document.getElementById('providerNameDisplay');
                providerNameDisplay.innerHTML = result.providerName;

                var providerName = document.getElementById('hiddenProviderName');
                providerName.value = result.providerName;

                var ukPrnDisplay = document.getElementById('ukprnDisplay');
                ukPrnDisplay.innerHTML = result.ukprn;

                var ukprn = document.getElementById('hiddenUkprn');
                ukprn.value = result.ukprn;

                var upinDisplay = document.getElementById('upinDisplay');
                upinDisplay.innerHTML = result.upin;

                var upin = document.getElementById('hiddenUpin');
                upin.value = result.upin;

                var submitButton = document.getElementById('submitButton');
                submitButton.disabled = false;
            }
        }

        function inputValueTemplate(result) {
            return result && result.providerName
        }

        function suggestionTemplate(result) {
            return result && '<strong>' + result.providerName + '</strong>' +
                ', ' + result.ukprn + ', ' + result.upin
        }

        var element = document.querySelector('#tt-overlay');
        var id = 'autocomplete-overlay';
        accessibleAutocomplete({
            element: element,
            id: id,
            minLength: 3,
            displayMenu: 'overlay',
            confirmOnBlur: false,
            onConfirm: populateProviderValues,
            source: window.searchClient.providerSearch.bind(window.searchClient),
            templates: {
                inputValue: inputValueTemplate,
                suggestion: suggestionTemplate
            },
            placeholder: 'e.g Manchester, 12345678 or 098765'
        });

        var v = new aspnetValidation.ValidationService();
        v.bootstrap();

    </script>
}
