@using ESFA.DC.Web.Operations.Constants
@model string

@{
    ViewData["Title"] = "Jobs Failed Current Period";
    ViewData[ViewDataConstants.BackLink] = "/";
}
<div id="content"></div>
<div class="govuk-grid-row">
    <br />
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-xl">Jobs failed current period</h1>
    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <table class="govuk-table" id="tblData">
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th class="govuk-table__header govuk-!-width-one-third" scope="col">Provider name</th>
                    <th class="govuk-table__header" scope="col">UKPRN</th>
                    <th class="govuk-table__header govuk-!-width-one-quarter" scope="col">Filename </th>
                    <th class="govuk-table__header govuk-!-width-one-quarter" scope="col">Date/time of failure</th>
                    <th class="govuk-table__header" scope="col">Processing time before failure</th>
                </tr>
            </thead>
            <tbody class="govuk-table__body" id="dataContent">
            </tbody>
        </table>
    </div>
</div>

<a href="#" class="govuk-button" onclick="downloadCSV()" id="aBtnDownloadCSV">Download CSV</a>

<br />

<div class="govuk-grid-row">
    <div class="govuk-grid-column-one-third">&nbsp;</div>
    <div class="govuk-grid-column-two-thirds">
        <label id="lastSync"></label>

        <label id="state"></label>
    </div>
</div>

<script src="~/lib/signalr/dist/browser/signalr.js" asp-append-version="true"></script>
<script src="~/lib/chartjs/dist/chart.bundle.min.js" asp-append-version="true"></script>

<script type="module">

    import JobFailedCurrentPeriodController from "/assets/js/processing/jobFailedCurrentPeriodController.js";
    import Hub from '/assets/js/hubs/Hub.js';

    (function () {
        const data = @Json.Serialize(Model);

        const jobFailedCurrentPeriodController = new JobFailedCurrentPeriodController();
        const hub = new Hub('jobFailedCurrentPeriodHub', jobFailedCurrentPeriodController.displayConnectionState);
        jobFailedCurrentPeriodController.registerHandlers(hub);

        hub.startHub();

        jobFailedCurrentPeriodController.updatePage(data);

        window.change = function () {
            jobFailedCurrentPeriodController.updatePage(jobFailedCurrentPeriodController._data);
        };

        window.downloadCSV = function () {
            jobFailedCurrentPeriodController.downloadCSV();
        };
    })();

</script>