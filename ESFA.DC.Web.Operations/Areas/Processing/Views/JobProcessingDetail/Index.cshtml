@using ESFA.DC.Web.Operations.Constants
@model string

@{
    ViewData["Title"] = "Job Processing Detail";
    ViewData[ViewDataConstants.BackLink] = "/";
}
<div id="content"></div>
<div class="govuk-grid-row">
    <br />
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-xl">Job Processing Detail</h1>
    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full" id="table_box_native">
        <table class="govuk-table" id="tblData">
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th class="govuk-table__header" scope="col" style="width:250px">Provider name</th>
                    <th class="govuk-table__header" scope="col" style="width:100px">UKPRN</th>
                    <th class="govuk-table__header" scope="col" style="width:170px">Filename </th>
                    <th class="govuk-table__header" scope="col">Processing time</th>
                </tr>
            </thead>
            <tbody class="govuk-table__body" id="dataContent">
            </tbody>
        </table>
    </div>
    <div id="index_native" class="box"></div>
</div>

<a href="#" class="govuk-button" onclick="downloadCSV()" id="aBtnDownloadCSV">Download CSV</a>

<br />

<div class="govuk-grid-row">
    <div class="govuk-grid-column-one-third">&nbsp;</div>
    <div class="govuk-grid-column-two-thirds">
        <label id="lastSync"></label>

        <label id="state"></label>
    </div>
</div>

<script src="~/assets/js/signalr/dist/browser/signalr.js"></script>
<script src="~/assets/js/chartJs/Chart.bundle.min.js"></script>
<script src="~/assets/js/paginator.js"></script>

<script type="module">

    import jobProcessingDetailController from "/assets/js/processing/jobProcessingDetailController.js";
    import Hub from '/assets/js/hubs/jobProcessingDetailHub.js';

    const jobProcessingDetailCtrl = new jobProcessingDetailController();

    const hub = new Hub('jobProcessingDetailHub', jobProcessingDetailCtrl);
    hub.startHub();

    (function () {
            const data = @Json.Serialize(Model);
            jobProcessingDetailCtrl.updatePage(data);
    })();

    window.change = function () {
        jobProcessingDetailCtrl.updatePage(jobProcessingDetailCtrl._data);
    };

    window.downloadCSV = function () {
        jobProcessingDetailCtrl.downloadCSV();
    };
</script>