@using ESFA.DC.Web.Operations.Constants
@using ESFA.DC.Web.Operations.Extensions
@using ESFA.DC.Web.Operations.Utils
@model ESFA.DC.Web.Operations.Models.ALLF.PeriodEndViewModel
@{
    ViewData["Title"] = "Index";
}

<div class="govuk-breadcrumbs">
    <ol class="govuk-breadcrumbs__list">
        <li class="govuk-breadcrumbs__list-item">
            <a class="govuk-breadcrumbs__link" href="/">Home</a>
        </li>
        <li class="govuk-breadcrumbs__list-item">
            <a class="govuk-breadcrumbs__link" href="/periodend/periodEnd">Period end</a>
        </li>
        <li class="govuk-breadcrumbs__list-item" aria-current="page">ALLF Period end</li>
    </ol>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <h1 class="govuk-heading-xl heading-bottom-margin">Period end</h1>
        <br />
        <h2 class="govuk-heading-l">Period A@(Model.Period.ToString().PadLeft(2, '0'))</h2>
    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <ul class="govuk-list">

            <li>
                @Html.ActionLink("History", "Index", "History", new { area = AreaNames.PeriodEndALLF }, new { @class = "govuk-link" })
            </li>
        </ul>
    </div>
</div>

<br />
<br />

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <form asp-action="Index" method="post" enctype="multipart/form-data" id="ilrform">

            @Html.AntiForgeryToken()

            <h1 class="govuk-heading-m">
                Choose ALLF reference data file to upload
            </h1>

            <input type="hidden" name="collectionYear" value="@Model.Year" />
            <input type="hidden" name="period" value="@Model.Period" />

            <div class="@ViewContext.GetGroupItemStyle(ErrorMessageKeys.Submission_FileFieldKey)" id="controls">
                <label class="govuk-label govuk-!-font-weight-bold" for="file">
                    Upload a file
                </label>
                <div error-field-name="@ErrorMessageKeys.Submission_FileFieldKey"></div>
                <input class="govuk-file-upload" name="file" id="file" type="file" accept=".csv">
            </div>

            <button class="govuk-button" id="uploadFile">
                Upload
            </button>
        </form>
    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full" id="fileContainer">
    </div>
</div>

<br />
<br />

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">

        <button type="submit" class="govuk-button customised" id="startPeriodEnd"
                onclick="window.periodEndClient.startPeriodEnd(@Model.Year, @Model.Period, '@CollectionTypes.ALLF');return false;">
            Start Period End
        </button>

        <br />
        <br />

        <div>
            <ol id="pathContainer" class="app-task-list"></ol>
        </div>


        <div class="app-task-list__section">
            <input id="closePeriodEnd" type="submit" class="govuk-button customised" onclick="window.periodEndClient.closePeriodEnd(@Model.Year, @Model.Period, '@CollectionTypes.ALLF');return false;" value="Close Period End">
        </div>
    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <label id="slowConnection" alt="Connection is slow at the moment"></label>
        <label id="lastSync"></label>
        <label id="state"></label>
    </div>
</div>

@section PageScripts
{
    <script src="~/lib/signalr/dist/browser/signalr.js" asp-append-version="true"></script>
    <script src="~/lib/handlebars/dist/handlebars.js" asp-append-version="true"></script>

    <script type="module">
        import PathController from '/assets/js/periodEnd/allf/betaPathController.js';

        @if (Model != null && Model.IsCurrentPeriod && !Model.PeriodEndFinished) {
            <text>
                import Client from '/assets/js/periodEnd/allf/client.js';
                import Hub from '/assets/js/hubs/hub.js';
            </text>
        }

        (function() {
            const stateModel = @Json.Serialize(Model);
            const pathController = new PathController();

            pathController.initialiseState(stateModel);

            @if (Model != null && Model.IsCurrentPeriod && !Model.PeriodEndFinished) {
                <text>
                    const hub = new Hub('allfPeriodEndHub', pathController.displayConnectionState);
                    pathController.registerHandlers(hub, stateModel);
                    hub.startHub();
                    window.periodEndClient = new Client(hub.getConnection());
                </text>
            }

            pathController.renderFiles(stateModel);
            pathController.renderPaths(stateModel);

            @if (!Model?.IsCurrentPeriod ?? false) {
                <text>
                    const dateLabel = document.getElementById(`lastSync`);
                    dateLabel.textContent = `Updates disabled as historical period end`;
                </text>
            }
        })();
    </script>
}