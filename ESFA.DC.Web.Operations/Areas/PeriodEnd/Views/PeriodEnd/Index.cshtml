@using ESFA.DC.Web.Operations.Areas.PeriodEnd.Models
@using ESFA.DC.Web.Operations.Constants
@model ESFA.DC.Web.Operations.Areas.PeriodEnd.Models.PeriodEndViewModel
@{
    ViewData["Title"] = "Index";
    ViewData[ViewDataConstants.BackLink] = "/periodend/periodEndPreparation";
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-one-third sticky scrolling-summary">
        <div id="summaryContainer"></div>
    </div>

    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-xl heading-bottom-margin">Period end</h1>
        <br />
        <h2 class="govuk-heading-l">Period R@(Model.Period.ToString().PadLeft(2, '0')) of Year @Model.Year</h2>


        <br />
        <br />

        <button type="submit" class="govuk-button customised" id="startPeriodEnd"
                onclick="window.periodEndClient.startPeriodEnd(@Model.Year, @Model.Period);return false;">
            Start Period End
        </button>

        <br />
        <br />

        <div>
            <ol id="pathContainer" class="app-task-list"></ol>
        </div>

        <br />
        <br />

        @await Html.PartialAsync("_form", new FormDefinitionViewModel
        {
            FormMethod = "PublishMcaReports",
            Year = Model.Year,
            Period = Model.Period,
            SubmitButtonId = "publishMcaReports",
            SubmitButtonText = "Publish MCA Reports"
        })
        
        <br />
        <br />

        @await Html.PartialAsync("_form", new FormDefinitionViewModel
        {
            FormMethod = "PublishProviderReports",
            Year = Model.Year,
            Period = Model.Period,
            SubmitButtonId = "publishProviderReports",
            SubmitButtonText = "Publish Provider Reports"
        })

        <br />
        <br />

        @await Html.PartialAsync("_form", new FormDefinitionViewModel
        {
            FormMethod = "ClosePeriodEnd",
            Year = Model.Year,
            Period = Model.Period,
            SubmitButtonId = "closePeriodEnd",
            SubmitButtonText = "Close Period End"
        })

        <br />
        <br />

        @await Html.PartialAsync("_form", new FormDefinitionViewModel
        {
            FormMethod = "UnPauseReferenceJobs",
            Year = Model.Year,
            Period = Model.Period,
            SubmitButtonId = "resumeReferenceData",
            SubmitButtonText = "Resume Reference Data Jobs"
        })
    </div>
</div>

<br />

<div class="govuk-grid-row">
    <div class="govuk-grid-column-one-third">&nbsp;</div>
    <div class="govuk-grid-column-two-thirds">
        <label id="lastSync"></label>

        <label id="state"></label>
    </div>
</div>

@section PageScripts
{
    @if (Model != null && Model.CollectionClosed)
    {
        <script src="~/assets/js/signalr/dist/browser/signalr.js"></script>
    }

    <script type="module">
            import PathController from '/assets/js/periodEnd/pathController.js';
            import Client from '/assets/js/periodEnd/client.js'; 
            
            const isCurrentPeriod = '@Html.Raw(Model?.IsCurrentPeriod)' === 'True';

            @if (Model != null && Model.CollectionClosed)
            {
                @Html.Raw("import Hub from '/assets/js/hubs/periodEndHub.js';")
                ;
                @Html.Raw("const hub = new Hub();")
                ;
                @Html.Raw("hub.startHub(isCurrentPeriod);")
                ;
                @Html.Raw("window.periodEndClient = new Client(hub.getConnection());")
                ;
            }

            (function() {
                const paths = '@Html.Raw(Model?.Paths)';
                const pathController = new PathController();

                const state = {
                    collectionClosed : '@Html.Raw(Model?.CollectionClosed)',
                    periodEndStarted : '@Html.Raw(Model?.PeriodEndStarted)',
                    mcaReportsReady : '@Html.Raw(Model?.McaReportsReady)',
                    mcaReportsPublished : '@Html.Raw(Model?.McaReportsPublished)',
                    providerReportsReady : '@Html.Raw(Model?.ProviderReportsReady)',
                    providerReportsPublished : '@Html.Raw(Model?.ProviderReportsPublished)',
                    periodEndFinished : '@Html.Raw(Model?.PeriodEndFinished)',
                    referenceDataJobsPaused : '@Html.Raw(Model?.ReferenceDataJobsPaused)'
                };
                
                pathController.initialiseState(state);

                pathController.renderPaths(paths);
            })();
    </script>
}