@using ESFA.DC.Web.Operations.Areas.PeriodEnd.Models
@using ESFA.DC.Web.Operations.Utils
@model ESFA.DC.Web.Operations.Areas.PeriodEnd.Models.PeriodEndViewModel
@{
    ViewData["Title"] = "Index";
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-one-third sticky scrolling-summary" style="height: 100%">
        <ul class="govuk-list">
            <li>
                @Html.ActionLink("Application Version", "Index", "Version", new { area = AreaNames.PeriodEnd }, new { @class = "govuk-link" })
            </li>
            <li>
                @Html.ActionLink("Email Distribution", "Index", "List", new { area = AreaNames.EmailDistribution }, new { @class = "govuk-link" })
            </li>
            <li>
                @Html.ActionLink("Reports", "Index", "PeriodEndReport", new { area = AreaNames.PeriodEnd }, new { @class = "govuk-link" })
            </li>
            <li>
                @Html.ActionLink("History", "Index", "History", new { area = AreaNames.PeriodEnd }, new { @class = "govuk-link" })
            </li>
        </ul>
        <div id="summaryContainer"></div>
    </div>

    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-xl heading-bottom-margin">Period end</h1>
        <br />
        <h2 class="govuk-heading-l">Period R@(Model.Period.ToString().PadLeft(2, '0')) of Year @Model.Year</h2>


        <br />
        <br />

        <button type="submit" class="govuk-button customised" id="startPeriodEnd"
                onclick="window.periodEndClient.startPeriodEnd(@Model.Year, @Model.Period);return false;">
            Start Period End
        </button>

        <br />
        <br />

        <div>
            <ol id="pathContainer" class="app-task-list"></ol>
        </div>

        <br />
        <br />

        @await Html.PartialAsync("_form", new FormDefinitionViewModel
        {
            FormMethod = "PublishMcaReports",
            Year = Model.Year,
            Period = Model.Period,
            SubmitButtonId = "publishMcaReports",
            SubmitButtonText = "Publish MCA Reports"
        })
        
        <br />
        <br />

        @await Html.PartialAsync("_form", new FormDefinitionViewModel
        {
            FormMethod = "PublishProviderReports",
            Year = Model.Year,
            Period = Model.Period,
            SubmitButtonId = "publishProviderReports",
            SubmitButtonText = "Publish Provider Reports"
        })

        <br />
        <br />

        @await Html.PartialAsync("_form", new FormDefinitionViewModel
        {
            FormMethod = "ClosePeriodEnd",
            Year = Model.Year,
            Period = Model.Period,
            SubmitButtonId = "closePeriodEnd",
            SubmitButtonText = "Close Period End"
        })

        <br />
        <br />

        @await Html.PartialAsync("_form", new FormDefinitionViewModel
        {
            FormMethod = "UnPauseReferenceJobs",
            Year = Model.Year,
            Period = Model.Period,
            SubmitButtonId = "resumeReferenceData",
            SubmitButtonText = "Resume Reference Data Jobs"
        })
    </div>
</div>

<br />

<div class="govuk-grid-row">
    <div class="govuk-grid-column-one-third">&nbsp;</div>
    <div class="govuk-grid-column-two-thirds">
            <label id="slowConnection" alt="Connection is slow at the moment"></label>
            <label id="lastSync"></label>
            <label id="state"></label>
        </div>
    </div>

@section PageScripts
{
    @if (Model != null && Model.CollectionClosed)
    {
        <script src="~/assets/js/signalr/dist/browser/signalr.js"></script>
    }

<script type="module">
        import PathController from '/assets/js/periodEnd/pathController.js';

        @if (Model != null && Model.IsCurrentPeriod && Model.CollectionClosed && !Model.PeriodEndFinished)
        {
            @Html.Raw("import Client from '/assets/js/periodEnd/client.js';")
            ;
            @Html.Raw("import Hub from '/assets/js/hubs/periodEndHub.js';")
            ;
            @Html.Raw("const hub = new Hub();")
            ;
            @Html.Raw("hub.startHub();")
            ;
            @Html.Raw("window.periodEndClient = new Client(hub.getConnection());")
            ;
        }

        (function() {
            const stateModel = @Json.Serialize(Model);
            const pathController = new PathController();

            pathController.initialiseState(stateModel);

            pathController.renderPaths(stateModel);

            @if (!Model?.IsCurrentPeriod ?? false) {
                @Html.Raw("const dateLabel = document.getElementById(`lastSync`);");
                    @Html.Raw("dateLabel.textContent = `Updates disabled as historical period end`;");
            }
        })();

</script>
}